@model BillingMVCProject.UIViewModels.InvoiceDetailsWithSum

<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" />
</head>

<body>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- jQuery -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script> <!-- Bootstrap JS -->
</body>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <h3>Customer: @Model.InvoiceDetails.FirstOrDefault()?.CustomerName</h3>
        </div>
        <div class="col-md-6 text-end">
            <h4 style="color:red">Total Outstanding Amount: @Model.TotalOutstandingAmount.ToString("C")</h4>
        </div>
    </div>
</div>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            @* <th>Customer Name</th> *@
            <th>Invoice ID</th>
            <th>Invoice Date</th>
            <th>Payment Status</th>
            <th>Outstanding Amount</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.InvoiceDetails)
        {
            <tr>
                @* <td>@item.CustomerName</td> *@
                <td class="invoiceId">@item.InvoiceId</td> <!-- This column contains InvoiceId -->
                <td class="invoiceDate">@item.InvoiceDate</td> <!-- This column contains InvoiceDate -->
                <td>@item.PaymentStatus</td>
                <td>@item.InvoiceOutStandingAmount</td> <!-- Format currency -->
                <td>
                    <!-- Record Payment Button that triggers the modal -->
                    <button class="btn btn-success btn-sm recordPaymentBtn" data-toggle="modal" data-target="#paymentModal">
                        Record Payment
                    </button>
                    <button type="button" class="btn btn-info"
                            data-bs-toggle="modal"
                            data-bs-target="#invoiceModal"
                            onclick="loadInvoiceDetails('@item.InvoiceId', 'view')" style="padding: 2px 18px;font-weight: bold;">
                        View
                    </button>
                    @* <!-- Open Invoice Button -->
                    <a href="@Url.Action("ViewInvoiceDetails", "GSTWithout", new { id = item.InvoiceId, flag = "view" })" class="btn btn-primary btn-sm" role="button">
                        Open
                    </a> *@
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal for Record Payment -->
<div class="modal fade" id="paymentModal" tabindex="-1" role="dialog" aria-labelledby="paymentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentModalLabel">Record Payment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Display Invoice Details -->
                <p><strong>Invoice ID:</strong> <span id="modalInvoiceId"></span></p>
                <p><strong>Invoice Date:</strong> <span id="modalInvoiceDate"></span></p>
                <p><strong>Outstanding Amount:</strong> <span id="modalOutstandingAmount"></span></p>

                <!-- Payment Form -->
                <form >
                    <div class="form-group">
                        <label for="paymentMode">Payment Mode</label>
                        <select id="paymentMode" class="form-control">
                            <option value="Cash">Cash</option>
                            <option value="UPI">UPI</option>
                            <option value="Bank Transfer">Bank Transfer</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="paymentAmount">Amount</label>
                        <input type="number" class="form-control" id="paymentAmount" placeholder="Enter Payment Amount" required />
                    </div>

                    <input type="hidden" id="invoiceId" />
                    <input type="hidden" id="invoiceDate" />
                    <input type="hidden" id="outstandingAmount" />

                    <button id="paymentDetailsForm" class="btn btn-primary">Submit Payment</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="invoiceModal" tabindex="-1" aria-labelledby="invoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 100%; width: 1000px;">
        <!-- Set custom width -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="invoiceModalLabel">Invoice Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="invoiceModalBody">
                <!-- Partial view will be loaded here -->
            </div>
        </div>
    </div>
</div>

<script>
    // Event handler for the "Record Payment" button
    @* $(document).on('click', '.recordPaymentBtn', function () { *@
    @*     var row = $(this).closest('tr'); *@
    @*     var invoiceId = row.find('.invoiceId').text().trim(); *@
    @*     var invoiceDate = row.find('.invoiceDate').text().trim(); *@
    @*     var outstandingAmount = row.find('td:eq(4)').text().replace(/[^\d.-]/g, '').trim(); *@

    @*     // Set the modal values based on the row's data *@
    @*     $('#modalInvoiceId').text(invoiceId); *@
    @*     $('#modalInvoiceDate').text(invoiceDate); *@
    @*     $('#modalOutstandingAmount').text(outstandingAmount); *@

    @*     // Set hidden inputs in the modal form *@
    @*     $('#invoiceId').val(invoiceId); *@
    @*     $('#invoiceDate').val(invoiceDate); *@
    @*     $('#outstandingAmount').val(outstandingAmount); *@

    @*     // Set the max value for the payment amount input *@
    @*     $('#paymentAmount').attr('max', outstandingAmount); *@
    @* }); *@


        $(document).on('click', '.recordPaymentBtn', function () {
        var row = $(this).closest('tr');
        var invoiceId = row.find('.invoiceId').text().trim();
        var invoiceDate = row.find('.invoiceDate').text().trim();
        var outstandingAmount = row.find('td:eq(4)').text().replace(/[^\d.-]/g, '').trim();

        // Set the modal values based on the row's data
        $('#modalInvoiceId').text(invoiceId);
        $('#modalInvoiceDate').text(invoiceDate);
        $('#modalOutstandingAmount').text(outstandingAmount);

        // Set hidden inputs in the modal form
        $('#invoiceId').val(invoiceId);
        $('#invoiceDate').val(invoiceDate);
        $('#outstandingAmount').val(outstandingAmount);

        // Set the max value for the payment amount input
        $('#paymentAmount').attr('max', outstandingAmount);
    });

    // Handle the form submission
    $(document).on('click', '#paymentDetailsForm', function (e) {
        e.preventDefault(); // Prevent the form from submitting the usual way

        // Gather form data
        var paymentMode = $('#paymentMode').val();
        var paymentAmount = parseFloat($('#paymentAmount').val());
        var invoiceId = $('#invoiceId').val();
        var invoiceDate = $('#invoiceDate').val();
        var outstandingAmount = parseFloat($('#outstandingAmount').val());

        // Validation for payment amount
        if (isNaN(paymentAmount) || paymentAmount <= 0) {
            alert("Please enter a valid payment amount greater than 0.");
            return; // Prevent further code execution
        }

        // Validation: Ensure payment amount is valid and not greater than the outstanding amount
    if (isNaN(paymentAmount) || paymentAmount <= 0) {
        alert("Please enter a valid payment amount greater than 0.");
        return; // Prevent further execution of the function (no AJAX call)
    }

    if (paymentAmount > outstandingAmount) {
        alert("Payment amount cannot be greater than the outstanding amount.");
        return; // Prevent AJAX call if the payment exceeds the outstanding amount
    }

        // Data to send in the request
        var data = {
            InvoiceId: invoiceId,
            InvoiceDate: invoiceDate,
            PaymentMode: paymentMode,
            PaymentAmount: paymentAmount
        };
        var url = gStrIpVal + 'GSTWithout/RecordPayment';
        // Make the AJAX request
        $.ajax({
            url: url,
            type: 'POST',
            data: data,
            success: function (response) {
                if (response.success) {
                    
                    $('#paymentModal').modal('hide');
                    location.reload(); // Reload the page after successful payment
                } else {
                    alert("There was an error recording the payment: " + response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error during AJAX request:", error);
                console.error("Status:", status);
                console.error("Response:", xhr.responseText);
                alert("Error while submitting payment. Please try again.");
            }
        });
    });

    
        $(document).on('click','#paymentDetailsForm', function (e) {
         
            e.preventDefault(); // Prevent the form from submitting the usual way

            // Gather form data
            var paymentMode = $('#paymentMode').val();
            var paymentAmount = parseFloat($('#paymentAmount').val());
            var invoiceId = $('#invoiceId').val();
            var invoiceDate = $('#invoiceDate').val();
            var outstandingAmount = parseFloat($('#outstandingAmount').val());

            // Validation
            
            // Data to send in the request
            var data = {
                InvoiceId: invoiceId,
                InvoiceDate: invoiceDate,
                PaymentMode: paymentMode,
                PaymentAmount: paymentAmount
            };
            console.log(data);
            $.ajax({
                url: '@Url.Action("RecordPayment", "GSTWithout")', 
                type: 'POST',
                data: data,
                success: function (response) {
                    if (response.success) {
                        alert("Payment recorded successfully!");
                        $('#paymentModal').modal('hide'); 
                    } else {
                        alert("There was an error recording the payment: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error during AJAX request:", error);
                    console.error("Status:", status);
                    console.error("Response:", xhr.responseText);
                    alert("Error while submitting payment. Please try again.");
                }
            });
        });
    function loadInvoiceDetails(invoiceId, actionFlag) {
        $('#invoiceModalBody').html("");
        console.log(invoiceId, actionFlag);
        var url = gStrIpVal + 'GSTWithout/ViewInvoiceDetails';
        $.ajax({
            url: url,
            type: 'POST',
            data: { id: invoiceId, flag: actionFlag },
            success: function (data) {
                console.log(data);
                if (actionFlag === 'view') {
                    $('#invoiceModalBody').html(data); // Load the partial view content for viewing
                } else if (actionFlag === 'edit') {
                    // Optional: redirect or load content into the modal for editing
                    $('#invoiceModalBody').html(data); // Load edit content if applicable
                }
            },
            error: function () {
                alert('Error loading invoice details.');
            }
        });
    }
</script>
