@model List<BillingMVCProject.UIViewModels.JobCardViewModel>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success auto-hide-message" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger auto-hide-message" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<h2>Job Card List</h2>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Job Card ID</th>
            <th>Issue Date</th>
            <th>Customer Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.JobCardId</td>
                <td>@item.IssueDate.ToString("yyyy-MM-dd")</td>
                <td>@item.CustomerName</td>
                <td>
                    <button type="button" class="btn btn-info"
                            data-bs-toggle="modal"
                            data-bs-target="#invoiceModal"
                            onclick="loadJobCardDetails('@item.JobCardId', 'view')"
                            style="padding: 2px 18px; font-weight: bold;">
                        Edit
                    </button>
                    <button type="button" class="btn btn-danger"
                            onclick="deleteJobCard('@item.JobCardId')"
                            style="padding: 2px 18px; font-weight: bold;">
                        Delete
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="modal fade" id="jobcardModal" tabindex="-1" aria-labelledby="jobcardModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 100%; width: 1200px;">
        <!-- Adjust width here -->
        <!-- Set custom width -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="jobcardModalLabel">JobCard Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="jobcardModalLabel" style="max-height: 80vh; overflow-y: auto;">
                <!-- Adjust height and add scrolling -->
                <!-- Partial view will be loaded here -->
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
    function loadJobCardDetails(jobCardId, action) {

        console.log(jobCardId);
        // Make an AJAX call to the server to get the details for the specific job card
        $.ajax({
            url: '@Url.Action("GetJobCardDetails", "JobCard")',  // The action and controller name
            type: 'GET',
            data: {
                jobCardId: jobCardId, // Send the JobCardId to the server
                action: action // You can pass additional parameters if needed
            },
            success: function(response) {
                // Populate the modal with the returned details
                if (response) {
                    $('#jobcardModal .modal-body').html(response);
                    $('#jobcardModal').modal('show'); // Show the modal
                } else {
                    alert('No details found for this job card');
                }
            },
            error: function(xhr, status, error) {
                alert('An error occurred: ' + error);
            }
        });
    }
    function deleteJobCard(jobCardId) 
    {
        if (confirm("Are you sure you want to delete this Job Card?")) {
            $.ajax({
                url: '@Url.Action("DeleteJobCard", "JobCard")', // URL of the controller action
                type: 'POST',
                data: { id: jobCardId },
                success: function (response) {
                    if (response.success) {
                        // Remove the deleted row from the table
                        $('#row-' + jobCardId).remove();
                        alert("Job Card deleted successfully.");
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + error);
                }
            });
        }
    }
    window.onload = function () {
        // Select all elements with the class 'auto-hide-message'
        var alertMessages = document.querySelectorAll('.auto-hide-message');

        // Loop through each alert and set the timeout to hide them
        alertMessages.forEach(function (alertMessage) {
            setTimeout(function () {
                alertMessage.style.display = "none";
            }, 2000); // 2000 milliseconds = 2 seconds
        });
    };
    
</script>

